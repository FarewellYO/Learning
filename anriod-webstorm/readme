一.andriod目录结构
|--- app
    |--- manifests
    |---|--- AndroidManifest.xml  主配置文件

    |--- java
    |---|--- com.test.licationName 包名称或者说是项目名
    |---|---|---| MainActivity 主Activity 文件

    |--- res
    |---|--- layout 布局文件 存储目录
    |---|---|--- activity_main.xml  主Activity 界面配置文件

    |---|--- mipmap
    |---|---|---|--- ic_launcher.png  文件夹 下面存储着不同 dpi的应用图标

    |---|--- values 各种配置文件
二.创建webApp资源文件 存储目录
需要在 res 的同级目录下创建一个assets 文件夹 用来存储 webapp的资源文件
     创建这个文件需要在系统的资源管理器中创建，不可以在编辑器中直接创建
     打开文件夹：右键res点击Show in Explorer
三.创建webview控件 并 实例化控件 以及开启javascript渲染
打开 app/res/layout/activity_main.xml
并取消默认的内边距属性
新建一个webview控件
设置webview控件的ID为mWebView
代码如下：<?xml version="1.0" encoding="utf-8"?>
     <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
         xmlns:tools="http://schemas.android.com/tools"
         android:id="@+id/activity_main"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
         tools:context="com.example.myapplication.MainActivity">
         <!--
         android:paddingBottom="@dimen/activity_vertical_margin"
         android:paddingLeft="@dimen/activity_horizontal_margin"
         android:paddingRight="@dimen/activity_horizontal_margin"
         android:paddingTop="@dimen/activity_vertical_margin"
         -->
         <!-- <TextView
              android:layout_width="wrap_content"
              android:layout_height="wrap_content"
              android:text="Hello World!" />
          -->

         <WebView
             android:layout_width="match_parent"
             android:layout_height="match_parent"
             android:id="@+id/mWebView">
         </WebView>
     </RelativeLayout>
修改 /app/java/com.chen_blog.chen/MainActiviy 文件
    导入 webview 组件：import android.webkit.WebView;
                      import android.webkit.WebViewClient;
     定义类属性：private WebView mWebView;
     实例化组件：mWebView = (WebView) findViewById(R.id.mWebView);
     使用loadurl方法 引入首页：mWebView.loadUrl("file:///android_asset/index.html");
     最终实现代码：package com.example.myapplication;

            import android.app.Activity;
            import android.os.Bundle;

            import android.webkit.WebView;
            import android.webkit.WebViewClient;


            public class MainActivity extends Activity {


                private WebView mWebView;

                @Override
                protected void onCreate(Bundle savedInstanceState) {
                    super.onCreate(savedInstanceState);
                    setContentView(R.layout.activity_main);

                    mWebView = (WebView) findViewById(R.id.mWebView);

                    mWebView.getSettings().setJavaScriptEnabled(true);
                    mWebView.setWebViewClient(new WebViewClient());

                    mWebView.loadUrl("file:///android_asset/User.html");

                    //测试远程的 mwebview.loadUrl("http://www.itxdl.cn");
                }
            }
四.配置网络权限
打开 app/manifests/AndroidManifest.xml
再 manifset 标签 下面 新增一行： <!-- 申请 网络权限-->
                                <uses-permission android:name="android.permission.INTERNET"/>
最终代码：<?xml version="1.0" encoding="utf-8"?>
     <manifest xmlns:android="http://schemas.android.com/apk/res/android"
         package="com.example.myapplication">
         <uses-permission android:name="android.permission.INTERNET"/>
         <uses-permission android:name="android.permission.CAMERA"/>
         <uses-feature android:name="android.hardware.camera" android:required="false"/>
         <uses-feature android:name="android.hardware.camera.autofocus" android:required="false"/>
         <uses-feature android:name="android.hardware.camera.front" android:required="false"/>
         <uses-feature android:name="android.hardware.camera.front.autofocus" android:required="false"/>


         <application
             android:allowBackup="true"
             android:icon="@mipmap/ic_launcher"
             android:label="@string/app_name"
             android:roundIcon="@mipmap/ic_launcher_round"
             android:supportsRtl="true"
             android:theme="@style/AppTheme">
             <activity android:name=".MainActivity">
                 <intent-filter>
                     <action android:name="android.intent.action.MAIN" />

                     <category android:name="android.intent.category.LAUNCHER" />
                 </intent-filter>
             </activity>
         </application>

     </manifest>
